@page "/fetchdata"
@inject IHttpClientFactory _clientFactory

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null) {
    <p><em>Loading...</em></p>
}
else {
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts) {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <button class="btn btn-primary" @onclick="Update">Update</button>
}

@code {
    record WeatherForecast(DateTime Date, int TemperatureC, string Summary, int TemperatureF);

    HttpClient client;

    WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync() {
        client = _clientFactory.CreateClient("AspNetApi");
        await Update();
    }

    async Task Update() => forecasts = await client.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
}
